version: '3.8'

services:
  lilybud420-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lilybud420-bot-prod
    restart: always
    environment:
      - HIGHRISE_BOT_TOKEN=${HIGHRISE_BOT_TOKEN}
      - HIGHRISE_ROOM_ID=${HIGHRISE_ROOM_ID}
      - HIGHRISE_API_KEY=${HIGHRISE_API_KEY}
      - PYTHONUNBUFFERED=1
    volumes:
      # Persist bot data
      - bot-data:/app/data
      # Persist logs
      - bot-logs:/app/logs
      # Mount music files (read-only)
      - ./mp3:/app/mp3:ro
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Log aggregation service
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: lilybud420-fluentd
    restart: unless-stopped
    volumes:
      - ./fluentd/conf:/fluentd/etc
      - bot-logs:/var/log/bot
    networks:
      - bot-network
    profiles:
      - logging

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: lilybud420-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - bot-network
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: lilybud420-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - bot-network
    profiles:
      - monitoring

networks:
  bot-network:
    driver: bridge

volumes:
  bot-data:
  bot-logs:
  prometheus-data:
  grafana-data:
